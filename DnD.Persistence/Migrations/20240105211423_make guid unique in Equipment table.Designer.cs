// <auto-generated />
using System;
using DnD.Persistence.DatabaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DnD.Persistence.Migrations
{
    [DbContext(typeof(DndDatabaseContext))]
    [Migration("20240105211423_make guid unique in Equipment table")]
    partial class makeguiduniqueinEquipmenttable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DnD.Domain.AbilityScores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Charisma")
                        .HasColumnType("int");

                    b.Property<int>("Constitution")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Dexterity")
                        .HasColumnType("int");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Intelligence")
                        .HasColumnType("int");

                    b.Property<int>("Strength")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Wisdom")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Abilities");
                });

            modelBuilder.Entity("DnD.Domain.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AbilityScoresId")
                        .HasColumnType("int");

                    b.Property<int?>("ClassId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DescriptionId")
                        .HasColumnType("int");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("RaceId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AbilityScoresId");

                    b.HasIndex("ClassId");

                    b.HasIndex("DescriptionId");

                    b.HasIndex("RaceId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("DnD.Domain.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Classes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2000, 10, 9, 22, 0, 0, 0, DateTimeKind.Utc),
                            Guid = new Guid("e1f6fe37-665a-4ef4-ae07-d852de1dadd6"),
                            Name = "Warrior"
                        });
                });

            modelBuilder.Entity("DnD.Domain.Description", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aligment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Background")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bonds")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Flaws")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ideals")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonalityTraits")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Descriptions");
                });

            modelBuilder.Entity("DnD.Domain.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CharacterId")
                        .HasColumnType("int");

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Damage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<float>("Weight")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("Guid")
                        .IsUnique();

                    b.ToTable("Equipments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cost = 1000,
                            CreatedAt = new DateTime(2000, 10, 9, 22, 0, 0, 0, DateTimeKind.Utc),
                            Damage = "1d8",
                            Description = "-",
                            Guid = new Guid("0d4dfedd-2134-42cc-ad04-48bc67c9917a"),
                            Name = "BattleAxe",
                            Weight = 4f
                        });
                });

            modelBuilder.Entity("DnD.Domain.Race", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Races");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2000, 10, 9, 22, 0, 0, 0, DateTimeKind.Utc),
                            Guid = new Guid("0c28c0e5-e89c-4070-bcd6-26f361af58f5"),
                            Name = "Human"
                        });
                });

            modelBuilder.Entity("DnD.Domain.WeaponProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.ToTable("WeaponProperties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2000, 10, 9, 22, 0, 0, 0, DateTimeKind.Utc),
                            Description = "ToDo",
                            Guid = new Guid("e401be37-3cb8-4339-9430-3a34a6fef085"),
                            Name = "Ammunition"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2000, 10, 9, 22, 0, 0, 0, DateTimeKind.Utc),
                            Description = "ToDo",
                            Guid = new Guid("b76727ec-fcd0-4eb2-828c-899816c189d8"),
                            Name = "Finese"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2000, 10, 9, 22, 0, 0, 0, DateTimeKind.Utc),
                            Description = "ToDo",
                            Guid = new Guid("b7ab8d98-23bb-41a5-94b5-8a9c76f68984"),
                            Name = "Heavy"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2000, 10, 9, 22, 0, 0, 0, DateTimeKind.Utc),
                            Description = "ToDo",
                            Guid = new Guid("2df462bf-bd85-48b0-aa92-f85effa01699"),
                            Name = "Light"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2000, 10, 9, 22, 0, 0, 0, DateTimeKind.Utc),
                            Description = "ToDo",
                            Guid = new Guid("67b269a2-3e40-45f7-b36f-ca08ce15f6cb"),
                            Name = "Loading"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2000, 10, 9, 22, 0, 0, 0, DateTimeKind.Utc),
                            Description = "ToDo",
                            Guid = new Guid("daa57348-ca21-4341-85c4-056053229f55"),
                            Name = "Range"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2000, 10, 9, 22, 0, 0, 0, DateTimeKind.Utc),
                            Description = "ToDo",
                            Guid = new Guid("d3b01956-8a13-408d-8bc4-0107679440ab"),
                            Name = "Reach"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2000, 10, 9, 22, 0, 0, 0, DateTimeKind.Utc),
                            Description = "ToDo",
                            Guid = new Guid("953e1537-beb8-4050-ab3a-5af85a7cf926"),
                            Name = "Special"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2000, 10, 9, 22, 0, 0, 0, DateTimeKind.Utc),
                            Description = "ToDo",
                            Guid = new Guid("a4b19609-98b1-4971-81ca-ec68ecfaf838"),
                            Name = "Thrown"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2000, 10, 9, 22, 0, 0, 0, DateTimeKind.Utc),
                            Description = "ToDo",
                            Guid = new Guid("c63d671d-e816-4ba4-ab3a-96872c7f7fd9"),
                            Name = "TwoHanded"
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2000, 10, 9, 22, 0, 0, 0, DateTimeKind.Utc),
                            Description = "ToDo",
                            Guid = new Guid("cfac124a-0ee0-432b-8aad-e43ddd40e1e0"),
                            Name = "Versatile"
                        });
                });

            modelBuilder.Entity("DnD.Domain.Character", b =>
                {
                    b.HasOne("DnD.Domain.AbilityScores", "AbilityScores")
                        .WithMany()
                        .HasForeignKey("AbilityScoresId");

                    b.HasOne("DnD.Domain.Class", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId");

                    b.HasOne("DnD.Domain.Description", "Description")
                        .WithMany()
                        .HasForeignKey("DescriptionId");

                    b.HasOne("DnD.Domain.Race", "Race")
                        .WithMany()
                        .HasForeignKey("RaceId");

                    b.Navigation("AbilityScores");

                    b.Navigation("Class");

                    b.Navigation("Description");

                    b.Navigation("Race");
                });

            modelBuilder.Entity("DnD.Domain.Equipment", b =>
                {
                    b.HasOne("DnD.Domain.Character", null)
                        .WithMany("Equipment")
                        .HasForeignKey("CharacterId");
                });

            modelBuilder.Entity("DnD.Domain.WeaponProperty", b =>
                {
                    b.HasOne("DnD.Domain.Equipment", null)
                        .WithMany("Properties")
                        .HasForeignKey("EquipmentId");
                });

            modelBuilder.Entity("DnD.Domain.Character", b =>
                {
                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("DnD.Domain.Equipment", b =>
                {
                    b.Navigation("Properties");
                });
#pragma warning restore 612, 618
        }
    }
}
